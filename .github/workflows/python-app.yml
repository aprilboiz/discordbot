name: Build and Deploy Python App to Self-hosted Runner

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Debug Docker Hub Credentials
      run: |
        echo "DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}"
        echo "DOCKERHUB_TOKEN present: ${{ secrets.DOCKERHUB_TOKEN }}"
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{vars.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Tags Docker image
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{vars.DOCKERHUB_USERNAME}}/discord-bot

    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{steps.meta.outputs.tags}}
        
  deploy:
    name: Deploy Application
    runs-on: self-hosted
    needs: build
    environment:
      name: production
    
    steps:
    - name: Deploy Discord Bot
      env:
        TOKEN: ${{ secrets.TOKEN }}
        SPOTIPY_CLIENT_SECRET: ${{ secrets.SPOTIPY_CLIENT_SECRET }}
        SPOTIPY_CLIENT_ID: ${{ secrets.SPOTIPY_CLIENT_ID }}
      run: |
        echo "Starting Deployment..."
        docker pull ${{steps.meta.outputs.tags}}
        docker rm -f discord-bot &>/dev/null
        docker run -it -v /home/discordbot-logs:/app/logs -e TOKEN=${{env.TOKEN}} SPOTIPY_CLIENT_ID=${{ENV.SPOTIPY_CLIENT_ID}} SPOTIPY_CLIENT_SECRET=${{env.SPOTIPY_CLIENT_SECRET}} -d --name discord-bot ${{steps.meta.outputs.tags}}
        echo "Deployment completed successfully!"
